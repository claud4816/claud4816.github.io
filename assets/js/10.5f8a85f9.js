(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{310:function(t,s,n){t.exports=n.p+"assets/img/test1.6b034822.png"},341:function(t,s,n){"use strict";n.r(s);var a=n(3),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-基础"}},[t._v("#")]),t._v(" js 基础")]),t._v(" "),a("h2",{attrs:{id:"_1-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-变量"}},[t._v("#")]),t._v(" 1 变量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量的作用：用来操作数据的，可以存储，也可以读取")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量的声明： var name;没赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var name='小黑';赋值了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js声明变量都用var")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js中的每一行代码都要带分号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js区分大小写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js中的字符串可以使用单引号和双引号，目前用单引号。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量命名的规范：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.变量名要有意义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.变量名有一定的规范：一般以字母或$符号、下划线开头，中间或后面可以有$符号，字母或数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.一般是小写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.驼峰命名法：多个单词下，首字母是小写，后面的是大写var bigNumber=10;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明变量并初始化/变量的初始化/声明变量值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明了一个num的变量，储存了一个数字100；")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//弹窗 输出100这个值")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在浏览器的控制台中输出100")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-五种数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-五种数据类型"}},[t._v("#")]),t._v(" 2 五种数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\njs中的数据类型：number string boolean null undefined object\nnumber数字类型\nstring字符串类型 一般用单引号或双引号括起来\nboolean布尔类型 值有两个：true真（1） false假（0）\nnull 空类型 一个对象指向为空，此时可以赋值为null\nundefined 未定义  值只有一个：undefined\n变量声明了但没有赋值时显示该值和函数没有明确返回值，如果接收了，结果也是现实undefined\n如果一个变量的结果是undefined和一个数字进行计算，结果：NaN（not a number）\nobject对象\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\ntypeof 的使用语法\ntypeof 变量名\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小白'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nll "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" undef\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出为：number")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//boolean")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意：不是null  是object")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" undef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-1-数字类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-数字类型"}},[t._v("#")]),t._v(" 2.1 数字类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//进制：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 八进制 以0开头")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十进制 就是正常的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  十六进制0x开头")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数字类型的范围： 最大值和最小值")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIN_VALUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不要用小数验证小数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//验证NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误示范：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如何验证这个结果是不是NaN 用isNaN()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正确示范：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不是一个数字？ 不是  输出true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不是数字为true 是数字为false")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-字符串类型"}},[t._v("#")]),t._v(" 2.2 字符串类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var str='10';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//var str="10"; 单引号双引号都可以')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如何看字符串的长度:变量名.length")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'what are you doing'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转义符：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//html转义符：&lt; &nbsp;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//js中的转义符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//tab是\\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' 是\\'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log("哈哈哈\\t哈哈")')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串的拼接：只有一个字符串，那么拼接在一起结果就是数字而不是运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我好'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串隐式转换：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//浏览器自动将字符串转换为数字，即隐式转换")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" str6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-3-类型间相互转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-类型间相互转换"}},[t._v("#")]),t._v(" 2.3 类型间相互转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类型转换：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数字类：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其他类型转整数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//parseInt();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseInt("10"))     //10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseInt("10sadf"))//10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseInt("gasd10"))//NaN')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseInt("10.98"))//10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseInt("10.98sd"))//10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其他类型转小数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//parseFloat();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseFloat("10"))     //10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseFloat("10sadf"))//10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseFloat("gasd10"))//NaN')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseFloat("10.98"))//10.98')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(parseFloat("10.98sd"))//10.98')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其他类型转数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Number();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(Number("10"))     //10')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(Number("10sadf"))//NaN')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(Number("gasd10"))//NaN')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(Number("10.98"))//10.98')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//console.log(Number("10.98sd"))//NaN')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//总结：想要转整数用parseInt()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//想要转小数用parseFloat()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//想要转数字用Number() 较上两种严格")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其他类型转字符串类型：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//.toString()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//(无意义)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//若变量有意义，则用.toString()    多数用.toString,但其不能转undefined 和null")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//若变量没意义，则用String()")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!!!!!!!!!!重点记忆，需要判断!!!!!!!!!!!!!!!!!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其他类型转boolean（值）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Boolean(值）")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'哈哈'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-操作符"}},[t._v("#")]),t._v(" 3 操作符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//操作符：符号 ，用来计算")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//算数运算符： + - * /  %(余数)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var num=20;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var result=num%3;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(result); //2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//除了加法外，减乘除都会进行隐式数据类型转换，转换后仍无法计算,输出值为NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*一元运算符：一个操作数就可以运算的符号\n    二元运算符：需要两个操作数进行运算的符号\n    三元运算符：三个...\n\n\n\n    复合运算符： +=  -=  *=  /=（num=num+10简化写法：num+=10）\n\n\n\n    关系运算符： > < >= <=  ==不严格的判断（仅判断值） === 严格（既判断值，又判断类型）    运算的结果是布尔类型。\n                          !==   不等于  不严格      !=== 严格\n    var str='10';\n    var num1=10;\n    console.log(str==num1);\n\n\n\n    逻辑运算符：\n    && 逻辑与 : 一个为false 结果就是false   一假则假\n    || 逻辑或 ：一个为true 结果是true       一真则真\n    !非 取反\n    var num2=10;\n    var num3=20;\n    console.log(num2==num2&&5>6)\n             //false    false     false&&false=false\n\n\n    /*赋值运算符： = += -= *= /= %= */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*优先级：\n    优先级从高到底\n1. ()  优先级最高\n2. 一元运算符  ++   --   !\n3. 算数运算符  先*  /  %   后 +   -\n4. 关系运算符  >   >=   <   <=\n5. 相等运算符  ==   !=    ===    !==\n6. 逻辑运算符  先&&   后||\n7. 赋值运算符  =\n  */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字面量:把一个值直接赋值给一个变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var num=10;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var flag=true;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//var str="哈哈哈"；')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var y=10;    var y=x（不合适称之为字面量）")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-for-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-for-循环"}},[t._v("#")]),t._v(" 4 for 循环")]),t._v(" "),a("h3",{attrs:{id:"_4-1-画星星案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-画星星案例"}},[t._v("#")]),t._v(" 4.1 画星星案例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//画星星")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//控制行数的---正方形的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//控制每一行有几个星星")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'★'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    for(var j=0;j<=2;j++){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      document.write("★");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//三角形的---五角星----随着行数的增加,每一行都会比上一行多一个五角星")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//控制每一行有几个星星")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'★'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-2-乘法口诀表案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-乘法口诀表案例"}},[t._v("#")]),t._v(" 4.2 乘法口诀表案例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for (var i = 1; i <= 9; i++) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     for (var h = 1; h <= i; h++) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         document.write(h + '*' + i + '=' + h * i);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     document.write('<br>')")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<table border=1 colspacing=0 cellspacing=0> '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<tr>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" h"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<td>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'</td>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'</tr>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'</table>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-continue-和-break"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-continue-和-break"}},[t._v("#")]),t._v(" 5 continue 和 break")]),t._v(" "),a("h3",{attrs:{id:"_5-1-break"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-break"}},[t._v("#")]),t._v(" 5.1 break")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//break关键字:如果在循环中使用,遇到了break,则立刻跳出当前所在的循环")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    for(var i=0;i<10;i++){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      while (true){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//        console.log("哈哈");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        break;//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    console.log("哈哈,我出来了");')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找到100到200之间第一个可以被7整除的数字,")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-2-continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-continue"}},[t._v("#")]),t._v(" 5.2 continue")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//continue:在循环中如果遇到continue关键字,直接开始下一次循环")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var i=0;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    while (i<10){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      console.log("哈哈");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      //continue;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      i++;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//案例:求100-200之间所有的奇数的和（用continue）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var sum=0;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var i=100;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    while(i<=200){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      //判断是不是偶数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      if(i%2==0){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//       //如果是偶数-----\x3e跳过这个数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        i++;//102")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        continue;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      sum+=i;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      i++;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(sum);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//案例:求整数100～200的累加值，但要求跳过所有个位为3的数")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var sum=0;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var i=100;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    while(i<=200){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      if(i%10==3){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        //个位数是3,不要")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        i++;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        continue;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      sum+=i;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      i++;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(sum);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//个位数是3,不要")]),t._v("\n    i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i\n  i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(3%10  ==3);")]),t._v("\n")])])]),a("h2",{attrs:{id:"_6-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-数组"}},[t._v("#")]),t._v(" 6 数组")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组:一组有序的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组的作用:可以一次性存储多个数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组的定义:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n *\n * 1. 通过构造函数创建数组\n * 语法:\n * var 数组名=new Array();\n * var array=new Array();//定义了一个数组\n * 数组的名字如果直接输出,那么直接就可以把数组中的数据显示出来,如果没有数据,就看不到数据\n *\n * var 数组名=new Array(长度);\n * 如果数组中没有数据,但是有长度---,数组中的每个值就是undefined\n * 构造函数的方式创建数组的时候,如果在Array(一个数字)---\x3e数组的长度(数组元素的个数)\n * 如果在Array(多个值);这个数组中就有数据了,数组的长度就是这些数据的个数\n *\n *\n * 2. 通过字面量的方式创建数组\n *\n * var 数组名=[];//空数组\n * var array=[];\n *\n *\n * 无论是构造函数的方式还是字面量的方式,定义的数组,如果有长度,那么默认是undefined\n *\n * 数组:一组有序的数据\n * 数组元素:数组中存储的每个数据,都可以叫数组的元素,比如:存储了3个数据,数组中3个元素\n * 数组长度:就是数组的元素的个数,比如有3个元素,就说,这个数组的长度是3\n * 数组索引(下标):用来存储或者访问数组中的数据的,索引从0开始,到长度减1结束\n * 数组的索引和数组的长度的关系:长度减1就是最大的索引值\n *\n * 如何设置数组中某个位置的值\n * 数组名[下标]=值;\n * arr[3]=100;\n * 如何获取数组中某个位置的值\n * var result=数组名[下标];\n * console.log(result);\n *\n *\n *\n *\n * */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过构造函数的方式定义一个数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var array=new Array(5);//没有数据,空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(array);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//alert(array);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就是一个数组----\x3e字面量的方式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var arr=[];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(arr);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var arr1=new Array();//构造函数的方式---空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var arr2=new Array(5);//构造函数的方式定义了一个数组,数组中有5个元素,数组长度是5,每个数据是undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var arr3=new Array(10,20,1000,40,50,60);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(arr3);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var arr=new Array(10,20,30,40,100);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    //console.log(arr[4]);//获取")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    //设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    arr[3]=1000;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(arr);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字面量的方式更简单")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var arr=[10,20,30,40,50,60,70,80,10,20,3043,5];//空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(arr.length);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n *\n * 请输入班级人数,根据班级人数,输入每个学生的数学成绩,求总成绩,求平均成绩,求最高分,求最低分\n *\n *\n *\n * */")]),t._v("\n")])])]),a("p",[t._v("注意问题：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var arr=[10,2,3,4,1];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//长度:5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//索引:0-4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(arr);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//alert(arr);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组中存储的数据类型一定是一样的吗? 类型可以不一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var arr=[10,"哈哈",true,null,undefined,new Object()];')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(arr);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组的长度是不是可以改变呢?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过索引来设置数组中的元素的值")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取元素的值,通过索引的方式")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向数组中追加新元素")]),t._v("\narr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新arr.length代替旧的arr.length")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数法和字面量发创建数组长度的区别：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4个空元素")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一个4")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("总结数组的基础知识：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n *\n * 数组:存储一组有序的数据\n * 数组的作用:一次性存储多个数据\n * 数组的定义方式:\n * 1.构造函数定义数组: var 数组名=new Array();\n * 2.字面量方式定义数组: var 数组名=[];\n *\n * var 数组名=new Array();空数组\n * var 数组名=new Array(8);定义了数组,有8个长度\n * var 数组名=new Array(值1,值2,值3....);定义数组并且有多个数据\n *\n * var 数组名=[];空数组\n * var 数组名=[值1,值2,值3];有三个数据\n * 数组元素:就是数组中存储的数据\n * 数组长度:就是数组中元素的个数\n * 数组索引(下标):从0开始,到数组的长度减1结束\n * 通过下标设置数组的元素值: 数组名[索引]=值\n * 通过下标访问数组的元素值: 数组名[索引]\n *\n *\n *\n *\n * */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//长度为5的数组,每个数据的值是undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//长度为5分数组,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//长度为3的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组中元素的值的类型可以不一样")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置数组的元素的值")]),t._v("\narr7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\narr7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),a("h2",{attrs:{id:"_6-1-冒泡排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-冒泡排序"}},[t._v("#")]),t._v(" 6.1 冒泡排序")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//冒泡排序:把所有的数据按照一定的顺序进行排列(从小到大,从大到下)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环控制比较的轮数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//控制每一轮的比较的次数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_7-函数的返回值问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-函数的返回值问题"}},[t._v("#")]),t._v(" 7 函数的返回值问题")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数的返回值:在函数内部有return关键字,并且在关键字后面有内容,这个内容被返回了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当函数调用之后,需要这个返回值,那么就定义变量接收,即可")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 如果一个函数中有return ,那么这个函数就有返回值\n * 如果一个函数中没有return,那么这个函数就没有返回值\n * 如果一个函数中没有明确的返回值,那么调用的时候接收了,结果就是undefined\n * (什么是没有明确返回值:函数中没有return,或者函数中有return,但是return后面没有任何内容)\n * 函数没有返回值,但是在调用的时候接收了,那么结果就是undefined,变量声明了,没有赋值,结果也是undefined\n * 如果一个函数有参数,有参数的函数\n * 如果一个函数没有参数,没有参数的函数\n * 形参的个数和实参的个数可以不一致\n * return 下面的代码是不会执行的\n */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数定义: 有参数有返回值的函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把和返回")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_8-复习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-复习"}},[t._v("#")]),t._v(" 8 复习")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\n     *\n     * break:在循环中遇到这个关键字,直接跳出当前所在的循环\n     * continue:在循环中遇到这个关键字,直接进行下一次循环\n     * 数组:存储一组有序的数据,数据类型可以不一样\n     * 数组的作用:一次性存储多个数据\n     * 数组元素:数组中存储的每个数据,叫数组元素,存储了5个数据,有5个数组元素\n     * 数组的长度:数组的元素的个数,叫数组的长度:数组名.length---\x3e就是长度,数组的长度是可以改变的\n     * 索引(下标):存储数组元素的编号,从0开始,到数组的长度-1结束\n     * 索引是用来存储和读取数组元素的\n     * 遍历数组:通过循环的方式找到数组中的每个数据\n     * 冒泡排序:\n     * 求数组的和,最大值,最小值,平均值\n     *\n     * 数组定义的方式:\n     * 1. 通过构造函数定义数组\n     * var 数组名=new Array();空数组 Array()就是构造函数\n     * var 数组名=new Array(长度);是设置数组的初始的长度,长度是可以改变的\n     * var 数组名=new Array(值,值,值...);定义数组并设置数组中的元素值\n     * 2. 字面量的方式定义数组\n     * var 数组名=[];空数组\n     * var 数组名=[10];这个数组有一个元素,值是10,长度是1\n     * 数组变量\n     * for(var i=0;i<数组名.length;i++){\n     *\n     * }\n     *\n     *\n     * 函数:把一些重复的代码封装起来,在需要的时候直接调用这个函数就可以了\n     * 函数作用:代码的重用\n     * 函数定义:\n     * function 函数名(){\n     *     函数体\n     * }\n     * 函数调用:\n     * 函数名();\n     *\n     * 参数:形参和实参\n     * 形参:函数定义的时候函数名字后面的小括号里的变量就是参数,是不需要写var\n     * 实参:函数调用的时候小括号里传入的变量或者是值,都是实参\n     * 返回值:函数中如果有return,那么这个函数就有返回值\n     * 如果函数中没有return,那么这个函数没有返回值\n     * 如果函数中有return,但是后面什么内容都没有,这个函数没有明确返回值\n     * 如果一个函数没有明确的返回值,函数调用了,并且接收了,那么此时接收的结果undefined\n     * 如果直接输出函数名字,那么是这个函数的代码\n     * 无参数无返回值的函数\n     * function f1(){\n     *\n     * }\n     * 有参数无返回值的函数,2个参数\n     * function f2(x,y){\n     *\n     * }\n     * 无参数有返回值的函数\n     * function f3(){\n     *   return 100;\n     * }\n     * 有参数有返回值的函数\n     * function f4(x){\n     *  return "您好";\n     * }\n     *\n     *\n     *\n     *\n     * */')]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环控制比较的轮数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此时只是比较了一次---如果想要比较多次--for循环")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    //隐式全局变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    for( i=0;i<10;i++){")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      console.log("今天天气真好");')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"_9-函数汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-函数汇总"}},[t._v("#")]),t._v(" 9 函数汇总")]),t._v(" "),a("h3",{attrs:{id:"_9-1-arguments-伪数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-arguments-伪数组"}},[t._v("#")]),t._v(" 9.1 arguments 伪数组")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算n个数字的和")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    function f1() {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      //获取的是函数在调用的时候,传入了几个参数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      //console.log(arguments.length);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      //使用arguments对象可以获取传入的每个参数的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      console.log(arguments);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    f1(10,20,30,40,100,200);//调用")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//arguments-----\x3e数组使用------它是一个对象，是一个伪数组")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-2-函数的其他定义方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-函数的其他定义方式"}},[t._v("#")]),t._v(" 9.2 函数的其他定义方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 命名函数:函数如果有名字,就是命名函数\n * 匿名函数:函数如果没有名字,就是匿名函数 !!注意:!!匿名函数表达式后面,赋值结束后,要加分号\n *\n * 函数的另一种定义方式\n * 函数表达式:\n * var f1=function (){};\n * 如果是函数表达式,那么此时前面的变量中存储的就是一个函数,而这个变量就相当于是一个函数,就可以直接加小括号调用了\n * f1();\n */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数的自调用,没有名字--声明的同时,直接调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不与其他函数冲突，不能重复调用，一次性的------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'阿涅哈斯诶呦'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'嘎嘎'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'助教好帅哦'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小苏好猥琐哦'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//覆盖上面的，两次fl();都是调用的小苏好猥琐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'助教没有小杨帅'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小杨真的很帅'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//两次都能输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数自调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'阿涅哈斯诶呦'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'嘎嘎'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数也是一种数据类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是函数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如何获取某个变量的类型? typeof")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数是有数据类型,数据类型:是function 类型的")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-3-函数作为参数使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-函数作为参数使用"}},[t._v("#")]),t._v(" 9.3 函数作为参数使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数可以作为参数使用,如果一个函数作为参数,那么我们说这个参数(函数)可以叫回调函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只要是看到一个函数作为参数使用了,那就是回调函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'您好啊'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fn此时应该是一个函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("suSay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我猥琐,我邪恶,我龌龊,小苏说'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("suSay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_10-作用域-全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-作用域-全局变量"}},[t._v("#")]),t._v(" 10 作用域&全局变量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//作用域:使用的范围")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 全局变量:声明的变量是使用var声明的,那么这个变量就是全局变量,全局变量可以在页面的任何位置使用\n * 除了函数以外,其他的任何位置定义的变量都是全局变量\n * 局部变量:在函数内部定义的变量,是局部变量,外面不能使用 eg:形参是局部变量\n * 全局变量,如果页面不关闭,那么就不会释放,就会占空间,消耗内存\n *\n * 全局作用域:全局变量的使用范围\n * 局部作用域:局部变量的使用范围\n *\n * 块级作用域:一对大括号就可以看成是一块,在这块区域中定义的变量,只能在这个区域中使用,但是在js中在这个块级作用域中定义的变量,外面也能使用;\n * 说明:js没有块级作用域,只有函数除外\n *\n * 隐式全局变量:声明的变量没有var,就叫隐式全局变量\n * 全局变量是不能被删除的,隐式全局变量是可以被删除的\n * 定义变量使用var是不会被删除的,没有var是可以删除的\n */")]),t._v("\n")])])]),a("h2",{attrs:{id:"_11-作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-作用域链"}},[t._v("#")]),t._v(" 11 作用域链")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12-预解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-预解析"}},[t._v("#")]),t._v(" 12 预解析")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//预解析:提前解析代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n *\n * 预解析:就是在解析代码之前\n * 预解析做什么事?\n * 把变量的声明提前了----提前到当前所在的作用域的最上面\n * 函数的声明也会被提前---提前到当前所在的作用域的最上面\n *\n *\n */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数调用的时候,把会函数的声明提升到作用域的上面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个变量的声明会提升到变量使用之前")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var num=10;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把变量的声明提前了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'哈哈,助教好猥琐哦'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-1-预解析中的局部作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-预解析中的局部作用域"}},[t._v("#")]),t._v(" 12.1 预解析中的局部作用域")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//预解析中,变量的提升,只会在当前的作用域中提升,提前到当前的作用域的最上面")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数中的变量只会提前到函数的作用域中的最前面,不会出去")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//预解析会分段(多对的script标签中函数重名,预解析的时候不会冲突)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    function f1() {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      console.log(num);//undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      var num=10;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    f1();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(num);//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"哈哈"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"嘎嘎"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-2-预解析练习题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-预解析练习题"}},[t._v("#")]),t._v(" 12.2 预解析练习题")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var a = 25;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function abc() {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   alert(a); //undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   var a = 10;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abc();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(a); //25")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var a;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function a() {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log('aaaaa');")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(a); //函数的代码")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a = 1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(a); //1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var a = 18;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function f1() {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   var b = 9;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(a); //undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(b); //9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   var a = "123";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f1();")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function f1() {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   var a; //局部变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   a = 9;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   //隐式全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   b = 9;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   c = 9;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(a); //9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(b); //9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(c); //9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f1();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(c); //  9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(b); // 9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(a); //报错")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f1 not a function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("复习:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 复习:\n * 函数:把一些重复的代码封装在一个地方,在需要的时候直接调用这个地方的代码就可以了\n *\n * 函数作用:代码重用\n *\n * 函数的参数:\n * 1.形参:函数定义的时候,函数名字后面的小括号里的变量\n * 2.实参:函数调用的时候,函数名字后面的小括号里的变量或者值\n *\n * 返回值:\n * 函数中有return，函数有返回值\n * 函数中没有return,函数没有返回值\n * 没有明确返回值:函数中没有return或者return后面没有任何内容\n * 如果一个函数没有明确的返回值,接收这个函数,结果是undefined\n *\n * 无参数无返回值的函数\n * 无参数有返回值的函数\n * 有参数无返回值的函数\n * 有参数有返回值的函数\n *\n * arguments-----\x3e可以获取函数调用的时候,传入的实参的个数\n * arguments是一个对象,是一个伪数组\n * arguments.length---\x3e是实参的个数\n * arguments[索引]----\x3e实参的值\n *\n * 作用域:变量的使用范围\n * 全局作用域:全局变量在任何位置都可以使用的范围\n * 局部作用域:局部变量只能在某个地方使用---函数内\n * 作用域链:在一个函数中使用一个变量,先在该函数中搜索这个变量,找到了则使用,找不到则继续向外面找这个变量,找到则使用,一直找到全局作用域,找不到则是undefined\n * 全局变量:只要是在函数外面声明的变量都可以看成或者是理解成是全局变量\n * 局部变量:在函数中定义的变量\n *\n * 预解析:在执行代码之前做的事情\n * 变量的声明和函数的声明被提前了,变量和函数的声明会提升到当前所在的作用域的最上面\n * 函数中的变量声明,会提升到该函数的作用域的最上面(里面)\n * 如果有多对的script标签都有相同名字的函数,预解析的时候是分段的,互不影响\n *\n * */")]),t._v("\n")])])]),a("h2",{attrs:{id:"_13-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-对象"}},[t._v("#")]),t._v(" 13 对象")]),t._v(" "),a("h3",{attrs:{id:"_13-1-字面量方式创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-字面量方式创建对象"}},[t._v("#")]),t._v(" 13.1 字面量方式创建对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" zs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置属性1   对象名.键名 = 值;  常用")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("160")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置属性2  对象名['键名'] = 值;")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'weight'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("170")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置对象方法1(行为)  用的是函数")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("eat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'喜欢吃榴莲'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置对象方法2(行为)")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'play'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'喜欢看直播'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用属性1    对象名.键名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(zs.age);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(zs.weight);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用属性2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(zs['weight']);  对象名['键名']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(zs['age']);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用对象的方法1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// zs.eat();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用对象方法2")]),t._v("\nzs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'play'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("删除和检测属性的方法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" zs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字面量构造函数")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("170")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'喜欢吃榴莲'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除对象属性和方法  delete 对象名.键名  delete 对象名['键名']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" zs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性已删除，显示undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delete zs.eat;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// zs.eat(); //属性已删除，报错")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测是否有某个属性或者方法 如果存在,就返回一个true,不存在返回一个false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'play'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_13-2-自定义构造函数创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-自定义构造函数创建对象"}},[t._v("#")]),t._v(" 13.2 自定义构造函数创建对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//自定义函数构造创建对象:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" studentNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" favour"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" like")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("studentNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" studentNumber\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gender\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("favour "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" favour\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("like "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" like\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("goodAt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'喜欢'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("like"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9527")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'敲代码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'唱歌'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xh "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小红'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4816")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'敲代码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'跳舞'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小白'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4811")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'敲代码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'跳广场舞'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小绿'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4812")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'敲代码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'跳街舞'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小粉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4813")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'敲代码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'跳迪斯科'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nxl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("goodAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" xm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'==========='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" xm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("new 方法创建对象后做的四件事：JSPRO 中有")]),t._v(" "),a("p",[t._v("add:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * js是一门什么样的语言?\n * 是一门解释性的语言\n * 是一门脚本语言\n * 是一门弱类型语言,声明变量都用var\n * 是一门基于对象的语言\n * 是一门动态类型的语言:\n * 1. 代码(变量)只有执行到这个位置的时候,才知道这个变量中到底存储的是什么,\n * 如果是对象,就有对象的属性和方法,如果是变量就是变量的作用\n * 2. 对象没有什么,只要点了,通过点语法,那么就可以为对象添加属性或者方法\n */")]),t._v("\n")])])]),a("h3",{attrs:{id:"_13-3-for-in-遍历对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-for-in-遍历对象"}},[t._v("#")]),t._v(" 13.3 for in 遍历对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  sex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历对象,不能通过for循环遍历,因为对象无序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//key是一个变量,这个变量中存储的是该对象的所有的属性的名字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历可以通过for in循环")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//key表示对象中所有属性的名字")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不能使用json.key   会让系统误会为某一对象内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_14-复杂数据类型和简单数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-复杂数据类型和简单数据类型"}},[t._v("#")]),t._v(" 14 复杂数据类型和简单数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*原始数据类型: number,string,boolean,undefined, null,object{\n        1. 基本类型(简单类型), 值类型: number, string, boolean\n        2. 复杂类型(引用类型): object Array\n        3. 空类型: undefined, null\n    }*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//值类型的值在哪一块空间中存储? 栈中存储")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引用类型的值在哪一块空间中存储?地址在栈上存储，对象在堆上存储,占用了两块空间")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var num=10;//值类型,值在栈上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var obj={};//复杂类型,对象在堆,地址(引用)在栈")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//值类型之间传递,传递的是值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引用类型之间传递,传递的是地址(引用)即堆上的对象所指向栈的地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小红'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n")])])]),a("h2",{attrs:{id:"_15-复杂类型的值的传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-复杂类型的值的传递"}},[t._v("#")]),t._v(" 15 复杂类型的值的传递")]),t._v(" "),a("p",[a("img",{attrs:{src:n(310),alt:"图片"}})]),t._v(" "),a("h2",{attrs:{id:"_16-内置对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-内置对象的方法"}},[t._v("#")]),t._v(" 16 内置对象的方法")]),t._v(" "),a("p",[t._v("Math Date String Array Object\n内置对象： js 系统自带的对象")]),t._v(" "),a("h3",{attrs:{id:"_16-1-math-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-math-对象"}},[t._v("#")]),t._v(" 16.1 Math 对象")]),t._v(" "),a("p",[t._v("可查 MDN----在线的帮助文档")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实例对象:通过构造函数创建出来,实例化的对象，实例方法必须通过实例对象调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//静态对象:不需要创建,直接就是一个对象,方法(静态方法)直接通过这个对象名字调用,静态方法必须通过大写的对象调用")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Math.PI----π---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(Math.PI);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.round(数字);   四舍五入")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Math.E----常数的底数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(Math.E);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Math.abs(值)-----绝对值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log( Math.abs('-1'));//1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log( Math.abs(-2));//2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.abs(null));//---------0  重点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    console.log(Math.abs("string"));//NaN')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Math.ceil(值)----向上取整")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.ceil(12.3));   //输出的值均为13")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.ceil(12.9));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.ceil(12.09));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.ceil(12.03));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.ceil(12.92));")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Math.floor(值)---向下取整")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.floor(12.3)); //输出的值均为12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.floor(12.9));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.floor(12.09));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.floor(12.03));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.floor(12.92));")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找一坨数字中的最大值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.max(10,1,9,100,200,45,78));")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找一坨数字中的最小值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(Math.min(10,1,9,100,200,45,78));")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//随机数：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(parseInt(Math.random() * 5) + 1); //0-4随机取   没有5   +1后有5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(parseInt(Math.random() * 100) + 1); //0-100随机取   没有100   +1后有100")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.ceil()---向上取整")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.floor()---向下取整")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.Pi----圆周率的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.Max()---一组数字中的最大值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.Min()---一组数字中的最小值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.abs()----绝对值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.random---随机数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.sqrt()----开平方")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Math.pow()----一个数字的多少次幂")]),t._v("\n")])])]),a("h3",{attrs:{id:"_16-2-date-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-date-对象"}},[t._v("#")]),t._v(" 16.2 Date 对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建实例对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var dt = new Date("2017-08-12");  //此处记得加字符串,也可写作("2017/08/12")')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //传入的时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(dt);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var dt=new Date;//传入的时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var dt = Date.now(); //获取时间的对象    //此方法获取到的是以毫秒为单位的当前时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(dt);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var dt = new Date(); //要先传入当前时间")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getFullYear()); //获取年份")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getMonth()+1); ///注意！！！！获取月份，得到的数值是从0开始的 真实的月份是需要加1的")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getDate());//获取日期")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getHours()); //获取小时")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getMinutes());  //获取分钟")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getSeconds());//获取秒")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt.getDay());////获取星期，注意！！！！星期从0开始的")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 总结：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var dt=new Date();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var dt=+new Date();//前面的加号是一种特殊的写法,只适用于这个Date的对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(dt);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getFullYear();//年")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getMonth();//月---从0开始")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getDate();//日")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getHours();//小时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getMinutes();//分钟")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getSeconds();//秒")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.getDay();//星期---从0开始")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.toDateString();//日期")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.toLocaleDateString();//日期")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.toTimeString();//时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.toLocaleTimeString();//时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dt.valueOf();//毫秒")]),t._v("\n")])])]),a("h3",{attrs:{id:"_16-3-string-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-3-string-对象"}},[t._v("#")]),t._v(" 16.3 String 对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * String----\x3e是一个对象\n * 字符串可以看成是字符组成的数组,但是js中没有字符类型\n * 字符是一个一个的,在别的语言中字符用一对单引号括起来\n * 在js中字符串可以使用单引号也可以使用双引号\n * 因为字符串可以看成是数组,所以,可以通过for循环进行遍历\n *\n * 字符串特性:不可变性,字符串的值是不能改变\n *\n * 字符串的值之所以看起来是改变的,那是因为指向改变了,并不是真的值改变了\n *\n */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var str="hello";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    str[1]="W";  字符串可以通过索引访问字符串中的某个值 但是,是可以访问---读取---只读,不能更改')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象的方式来看待")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var str="小苏好猥琐";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    str="小苏好邪恶了";//重新赋值的过程，字符串没发生改变，仅仅是在堆中的指向发生了改变，而不是更改字符串')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String对象")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    string ----\x3e字符串类型----基本类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    String----\x3e字符串类型----引用类型")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串对象----String对象")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//js中没有字符类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串类型")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var str="hello";//可以看成是一个字符数组')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    for(var i=0;i<str.length;i++){")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      console.log(str[i]);    //遍历字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 总结")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n *\n * 实例方法----\x3e必须要通过new的方式创建的对象(实例对象)来调用的方法\n * 静态方法----\x3e直接通过大写的构造函数的名字调用的方法(直接通过大写的对象名字调用的)\n *\n * */")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串的常用属性:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .length------\x3e字符串的长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(str.length);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .charAt(索引),返回值是指定索引位置的字符串,超出索引,结果是空字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "whatareyounoshalei";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var result = str.charAt(10000);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(result); //空字符串")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// String.fromCharCode(数字值,可以是多个参数),返回的是ASCII码对应的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var str = String.fromCharCode(83, 79, 83);;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .concat(字符串1,字符串2,...);返回的是拼接之后的新的字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "小苏";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// console.log(str.concat("喜欢", "凤姐", "这是", "真的"));')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .indexOf(要找的字符串,从某个位置开始的索引);返回的是这个字符串的索引值,没找到则返回-1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var str1 = 'hello amen';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var index1 = str1.indexOf('e');")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(index1);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .lastIndexOf(要找的字符串);从后向前找,但是索引仍然是从左向右的方式,找不到则返回-1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "helo amen";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var index = str.lastIndexOf("e");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(index);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// .replace("原来的字符串","新的字符串");用来替换字符串')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "小苏好帅哦,真的好勇敢哦";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.replace('帅', '丑'); //第一个值为原字符串的值，第二个值是要替换成的值,但是只能字符串中的替换第一个字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .slice提取字符串，(开始的索引,结束的索引)： 从索引5的位置开始提取,到索引为10的前一个结束,没有10，并返回这个提取后的字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "如果有一天我邪恶了,请记住,我曾纯洁过";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.slice(5, 10);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str); //结果：我邪恶了,")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// .split("要干掉的字符串",切割后留下的个数);切割字符串')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "乔峰|慕容|凤姐|梅超风|小苏|大蛇丸";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str1 = str.split("|");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str1); //结果切割成了数组样式的字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for (var i = 0; i < str1.length; i++) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(str1[i]); //遍历数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .substr截取新的字符串：(开始的位置,个数);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "哈哈,小苏真的是好帅哦";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.substr(5, 5);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str); //结果：真的是好帅")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .substring截取新的字符串：(开始的索引,结束的索引)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "哈哈,小苏真的是好帅哦";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.substring(5, 9); //不包含第9个")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str); //结果：真的是好")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .toLocaleLowerCase();转小写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .toLowerCase();转小写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "HELLO";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.toLocaleLowerCase();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// // .toLocaleUpperCase()转大写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// // .toUpperCase();转大写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "hello";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.toLocaleUpperCase();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// // .trim();干掉字符串两端的空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = "   哦,这    是一个神奇的一天   ";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str = str.trim();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str);")]),t._v("\n")])])]),a("h3",{attrs:{id:"_16-4-arry-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-4-arry-对象"}},[t._v("#")]),t._v(" 16.4 Arry 对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array.isArray(对象)----\x3e判断这个对象是不是数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.instanceof关键字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var obj = [];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(obj instanceof Array); //true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.使用数组的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(Array.isArray(obj)); //true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!!! //  .push(值);---\x3e把值追加到数组中,加到最后---返回值也是追加数据之后的数组长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40, 50];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var result = arr.push(100);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(result); //6，输出的是追加新元素后数组的长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr); //输出的是追加新元素后的数组")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!!! //  .pop();---\x3e删除数组中最后一个元素,返回值就是删除的这个值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40, 50];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var result = arr.pop();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(result); //50，输出的是删除的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr); //输出的是删除元素后的数组")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!!! //  .shift();---\x3e删除数组中第一个元素,返回值就是删除的这个值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40, 50];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var result = arr.shift();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(result); //10，输出的是删除的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr); //输出的是删除元素后的数组")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//!!!!! //  .unshift();---\x3e向数组的第一个元素前面插入一个新的元素,----返回值是插入后的长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40, 50];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var result = arr.unshift(1);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(result); //6，输出的是追加新元素后数组的长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr); //输出的是追加新元素后的数组")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .concat(数组,数组,数组,...) 用来组合一个新的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr1 = [10, 20, 30];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr2 = [40, 50, 60];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr1.concat(arr2));")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .every(函数)--用来筛选数组中的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数中有三个参数,第一个参数是元素的值，第二个参数是索引值,第三个参数是原来的数组(没用)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回值是布尔类型,函数作为参数使用，如果这个数组中的每个元素的值都符合条件,最后才返回的是true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [1000, 2000, 3000];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //a----: 元素的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //b----: 索引的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //c----:谁调用了这个方法,那么c就是谁----\x3earr")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var flag = arr.every(function (a, b) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return a > 2000; //数组中的每个元素的值都要大于2000的情况,最后才返回true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(flag); //false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .filter(函数);返回的是数组中每一个元素都符合条件的元素,组成了一个新的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [1000, 2000, 3000];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //a----: 元素的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //b----: 索引的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var flag = arr.filter(function (a, b) {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return a > 2000; //筛选数组中大于2000的元素并输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(flag); //3000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .forEach(函数)方法---遍历数组用---相当于for循环")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.forEach(function (ele, index) { //ele数组的元素值,index元素下标    Orz...其他值也可以")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log(ele + '======' + index);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //  .indexOf(元素值);返回的是索引,从前往后数,没有则是-1  // lastIndexOf  用法一致，从后往前数索引")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var index = arr.indexOf(400);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(index); //-1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  .join("字符串");在数组的每个元素中间加一个字符串----返回的是一个字符串')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var arr = ["小白", "小黑", "小红", "小芳", "小绿", "小苏"];')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// var str = arr.join("|");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .map(函数);---\x3e数组中的每个元素都要执行这个函数,把执行后的结果重新的全部的放在一个新的数组中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var numbers = [1, 4, 9];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var roots = numbers.map(Math.sqrt); //sqrt开根号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(roots);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .reverse();-----\x3e反转数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40, 50];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.reverse(); //反转数组元素，括号里的值为空")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  .sort();---排序的,可能不稳定,如果不稳定,请写MDN中的那个固定的代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [1, 40, 20, 10, 100];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.sort(function (a, b) { //稳定写法  从小到大")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return a - b;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// })")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.sort(function (a, b) { //稳定写法  从大到小")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return b - a;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// })")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//.slice(开始的索引,结束的索引);------把截取的数组的值放在一个新的数组中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var newArr = arr.slice(3, 7); //不包括7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(newArr);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//.splice(开始的位置,要删除的个数,替换的元素的值);一般是用于删除数组中的元素,或者是替换元素,或者是插入元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var myFish = [1, 2, 3, 4];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myFish.splice(2, 0, 'h','i'); // 在索引为2的位置后插入'h'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(myFish);")]),t._v("\n")])])]),a("p",[t._v("补充：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UTF-8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Document"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    数据相关api\n    map\n    filter\n    some\n    forEach\n    findIndex\n    push\n    unshift\n    slice\n    splice\n  */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr1 = [];")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.forEach(item=>{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   arr1.push(item + 1);")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr1)")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map的作用：对数组中原有数据进行加工处理，形成一个新的数组，新数组中包含所有加工之后的数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr1 = arr.map(item=>{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   // return item + 1;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   // return item * item;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return 123;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr1)")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// filter的作用：过滤出原有数组中符合条件的数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var arr2 = arr.filter(item=>{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   // 返回值表示过滤条件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   // return item > 4;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return item > 2 && item < 5;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(arr2)")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// some 作用：判断数组中是否包含符合条件的数，只要有一个就返回true，否则返回false据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var flag = arr.some(item=>{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   return item > 3;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(flag)")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var currentIndex = null;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.forEach((item, index)=>{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   if(item == 3) {")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     currentIndex = index;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   }")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(currentIndex)")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var currentIndex = null;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr.some((item, index) => {")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   if(item == 3) {")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     // 找到了数据，保存对应索引，终止继续遍历")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     currentIndex = index")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     // 终止遍历")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return true;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   }")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log('------------')")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// })")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(currentIndex)")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// findIndex 查找符合条件的数据的索引")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"_17-基本包装类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-基本包装类型"}},[t._v("#")]),t._v(" 17 基本包装类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基本包装类型")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//普通变量不能直接调用属性或者方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象可以直接调用属性和方法")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基本包装类型:本身是基本类型,但是在执行代码的过程中,如果这种类型的变量调用了属性或者是方法,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//那么这种类型就不再是基本类型了,而是基本包装类型,这个变量也不是普通的变量了,而是基本包装类型对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string number boolean")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var str="hello";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    str=str.replace("ll","HH"); //调用了方法 所以就不是基本类型了 而是基本包装类型')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(str);")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var str=new String("hello");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    str=str.replace("ll","HH");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(str);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    str=null;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var num=10;//number----\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    console.log(num.toString());")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//布尔值下：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是一个对象&&true,那么结果是true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是一个true&&对象,那么结果是对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出为true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  var result=true&&flag;  //输出为flag对象")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    var num=10;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var num2=Number("10");//转换,没有new---类型转')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//    var num3=new Number("10");//基本包装类型')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);